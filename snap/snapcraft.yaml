name: jami
version: git
adopt-info: jami
icon: icons/ring.png
summary: 'Jami, formally Ring: secure, distributed communication software & SIP client'
description: >
  Jami is free software which allows its users to communicate in multiple ways.

  * A telephone: a simple tool to connect, communicate and share.
  * A teleconferencing tool: easily join calls to create conferences with multiple participants.
  * A media sharing tool: Jami supports a variety of video input options, including mutliple cameras and image and video files, and the selection of audio inputs and outputs; all this is supported by multiple high quality audio and video codecs.
  * A messenger: send text messeges during calls or out of calls (as long as your peer is connected).
  * A building block for your IoT project: re-use the universal communications technology of Jami with its portable library on your system of choice.

confinement: strict
grade: stable
base: core18

plugs:
  gnome-3-28-1804:
    interface: content
    target: $SNAP/gnome-platform
    default-provider: gnome-3-28-1804:gnome-3-28-1804
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes:gtk-3-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes:icon-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes:sounds-themes

slots:
  dbus-ring-slot:
    interface: dbus
    bus: session
    name: cx.ring.Ring
  dbus-ringgnome-slot:
    interface: dbus
    bus: session
    name: cx.ring.RingGnome

layout:
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/webkit2gtk-4.0:
    bind: $SNAP/gnome-platform/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/webkit2gtk-4.0
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib

environment:
  ALSA_CONFIG_PATH: $SNAP/etc/alsa.conf

apps:
  jami:
    command: usr/bin/gnome-ring
    command-chain:
    - bin/desktop-launch
    - bin/gnome-ring-wrapper
    common-id: gnome-ring.desktop
    desktop: usr/share/applications/gnome-ring.desktop
    slots:
    - dbus-ring
    - dbus-ringgnome
    plugs:
    - browser-support
    - camera
    - desktop
    - desktop-legacy
    - gsettings
    - home
    - network
    - network-bind
    - opengl
    - pulseaudio
    - x11
    - wayland

  dring:
    command: bin/dring-autostart
    command-chain:
    - bin/desktop-launch
    autostart: jami-dring.desktop
    slots:
    - dbus-ring
    plugs:
    - browser-support
    - camera
    - desktop
    - desktop-legacy
    - gsettings
    - home
    - network
    - network-bind
    - opengl
    - pulseaudio
    - x11
    - wayland

parts:
  desktop-launch:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    plugin: nil
    build-packages:
    - gcc
    - qtbase5-dev
    - dpkg-dev
    stage-packages:
    - libqt5gui5
    - libqt5svg5 # for loading icon themes which are svg
    - try: [appmenu-qt5] # not available on core18
    override-pull: |
      snapcraftctl pull
      sed -i -E 's|\. \$SNAP/flavor-select|USE_gtk3=true|' gtk/launcher-specific 
      sed -i -E 's|\. \$SNAP/flavor-select|USE_qt5=true|' qt/launcher-specific
      sed -i -E 's|(append_dir GTK_PATH \$RUNTIME/usr/lib/\$ARCH/gtk-2.0)|#\1|' qt/launcher-specific
      sed -i -E 's|\$RUNTIME|$SNAP|g' qt/launcher-specific
      sed -i -E 's|\$WITH_RUNTIME|no|g' qt/launcher-specific
    override-build: |
      snapcraftctl build
      gcc -Wall -O2 -o bindtextdomain.so -fPIC -shared src/bindtextdomain.c -ldl
      
      echo "#!/bin/bash" > desktop-launch
      cat common/init >> desktop-launch

      cat gtk/runtime-exports >> desktop-launch
      cat qt/runtime-exports >> desktop-launch
      
      cat common/desktop-exports >> desktop-launch
      
      cat gtk/launcher-specific >> desktop-launch
      cat qt/launcher-specific >> desktop-launch
      
      cat common/mark-and-exec >> desktop-launch

      install -D -m755 desktop-launch $SNAPCRAFT_PART_INSTALL/bin/desktop-launch
      install -D -m644 bindtextdomain.so $SNAPCRAFT_PART_INSTALL/lib/bindtextdomain.so

      mkdir -pv $SNAPCRAFT_PART_INSTALL/gnome-platform

  scripts:
    plugin: dump
    source: scripts
    organize:
      dring-autostart: bin/dring-autostart
      gnome-ring-wrapper: bin/gnome-ring-wrapper

  alsa:
    plugin: nil
    source: https://github.com/diddledan/snapcraft-alsa.git
    build-packages:
    - libasound2-dev
    stage-packages:
    - libasound2
    - libasound2-plugins
    - libjack0
    override-pull: |
      cat > alsa.conf <<EOF
      pcm.!default {
        type pulse
        fallback "sysdefault"
        hint {
          show on
          description "Default ALSA Output (currently PulseAudio Sound Server)"
        }
      }
      ctl.!default {
        type pulse
        fallback "sysdefault"
      }
      EOF
    override-build: |
      install -m644 -D -t $SNAPCRAFT_PART_INSTALL/etc alsa.conf

  jami-lib:
    after: [alsa, desktop-launch]
    source: https://review.jami.net/ring-project
    source-type: git
    source-branch: production
    plugin: nil
    override-pull: |
      snapcraftctl pull
      sed -i -E 's|(tmpName) << (PACKAGE_NAME << "_shm_")|\1 << "snap.jami." << \2|' daemon/src/media/video/sinkclient.cpp
    override-build: |
      cd $SNAPCRAFT_PART_BUILD/daemon/contrib
      mkdir -p native
      cd native
      ../bootstrap
      make

      cd $SNAPCRAFT_PART_BUILD/daemon
      ./autogen.sh
      ./configure --prefix=/usr --disable-shared
      make -j$SNAPCRAFT_PARALLEL_BUILD_COUNT
      DESTDIR=$SNAPCRAFT_PART_INSTALL make install

      cd $SNAPCRAFT_PART_BUILD/lrc
      mkdir build
      cd build
      cmake .. -DCMAKE_INSTALL_PREFIX=/usr \
               -DRING_BUILD_DIR=$SNAPCRAFT_PART_BUILD/daemon/src # \
               # -DENABLE_LIBWRAP=true
      make
      DESTDIR=$SNAPCRAFT_PART_INSTALL make install

      sed -i "s|/usr|$SNAPCRAFT_STAGE/usr|g" $SNAPCRAFT_PART_INSTALL/usr/lib/cmake/LibRingClient/LibRingClientConfig.cmake
    build-packages:
    - autoconf
    - autoconf-archive
    - automake
    - autopoint
    - bzip2
    - cmake
    - curl
    - gzip
    - libasound2-dev
    - libavcodec-dev
    - libavdevice-dev
    - libavformat-dev
    - libboost-dev
    - libdbus-1-dev
    - libdbus-c++-dev
    - libexpat1-dev
    - libgnutls28-dev
    - libgsm1-dev
    - libjack-dev
    - libjsoncpp-dev
    - libopus-dev
    - libpcre3-dev
    - libpulse-dev
    - libsamplerate0-dev
    - libsndfile1-dev
    - libspeex-dev
    - libspeexdsp-dev
    - libsrtp-dev
    - libswscale-dev
    - libtool
    - libudev-dev
    - libupnp-dev
    - libva-dev
    - libvdpau-dev
    - libyaml-cpp-dev
    - qttools5-dev
    - uuid-dev
    - yasm
    stage-packages:
    - libavcodec-extra
    - libavcodec57
    - libavdevice57
    - libavformat57
    - libdbus-1-3
    - libdbus-c++-1-0v5
    - libexpat1
    - libgnutls30
    - libgsm1
    - libjack0
    - libjsoncpp1
    - libopus0
    - libpcre3
    - libqt5core5a
    - libqt5dbus5
    - libqt5sql5
    - libqt5sql5-sqlite
    - libsamplerate0
    - libslang2
    - libsndfile1
    - libspeex1
    - libspeexdsp1
    - libswscale4
    - libudev1
    - libupnp6
    - libuuid1
    - libva-drm2
    - libva-glx2
    - libva-wayland2
    - libva2
    - libvdpau-va-gl1
    - libvdpau1
    - va-driver-all

  jami:
    after: [jami-lib, alsa, desktop-launch]
    source: https://review.jami.net/ring-project
    source-type: git
    source-branch: production
    source-subdir: client-gnome
    plugin: cmake
    parse-info: [usr/share/appdata/gnome-ring.appdata.xml]
    configflags:
      - -DCMAKE_INSTALL_PREFIX=/usr
    override-pull: |
      snapcraftctl pull
      sed -i -E 's|^Icon=.*|Icon=/usr/share/icons/hicolor/scalable/apps/ring.svg|' client-gnome/gnome-ring.desktop
    build-packages:
    - cmake
    - g++
    - gettext
    - gnome-icon-theme-symbolic
    - libcanberra-gtk3-dev
    - libclutter-gtk-1.0-dev
    - libebook1.2-dev
    - libgtk-3-dev
    - libnotify-dev
    - libqrencode-dev
    - libwebkit2gtk-4.0-dev
    - qtbase5-dev
    stage-packages:
    - libqt5core5a
    - libebook-1.2-19
    - libqrencode3
